(define (problem myProblem_chip_medium)
(:domain myDomain_chip_medium)
(:objects 
design - Design
silicon - SiliconMaterial
impurity - ImpurityMaterial
resist - ResistMaterial
chemicals - ChemicalsMaterial
chip - ChipMaterial
true - Boolean
false - Boolean
available - State
broken - State
implanting - Capability
mask_creating - Capability
taking_chemicals - Capability
taking_design - Capability
testing - Capability
taking_resist - Capability
photolithography - Capability
taking_silicon - Capability
taking_impurity - Capability
packaging_cooling - Capability
packaging - Capability
dicing - Capability
smart_testing - Capability
checking_quality - Capability
implanter2usa - Service_imp2
creator1usa - Service_cre1
inventorycanada - Service_inv_ca
implanter1usa - Service_imp1
designeruk - Service_des_uk
tester1usa - Service_tes1
inventorybelgio - Service_inv_be
lithographer2usa - Service_lit2
inventorychina - Service_inv_cn
inventoryrussia - Service_inv_ru
inventorychile - Service_inv_cl
designerchina - Service_des_ch
inventorybrazil - Service_inv_br
packager_cooling1usa - Service_pac_cool1
packager2usa - Service_pac2
tester2usa - Service_tes2
designerusa - Service_des_us
packager1usa - Service_pac1
inventoryaustria - Service_inv_aus
dicer2usa - Service_dic2
smarttester1usa - Service_sma_tes1
quality1usa - Service_qua1
lithographer1usa - Service_lit1
dicer1usa - Service_dic1
inventoryusa - Service_inv_us
)
(:init 
(provides implanter2usa implanting)
(provides creator1usa mask_creating)
(provides inventorycanada taking_chemicals)
(provides implanter1usa implanting)
(provides designeruk taking_design)
(provides tester1usa testing)
(provides inventorybelgio taking_resist)
(provides lithographer2usa photolithography)
(provides inventorychina taking_silicon)
(provides inventoryrussia taking_silicon)
(provides inventorychile taking_impurity)
(provides designerchina taking_design)
(provides inventorybrazil taking_silicon)
(provides inventorybrazil taking_impurity)
(provides packager_cooling1usa packaging_cooling)
(provides packager2usa packaging)
(provides tester2usa testing)
(provides designerusa taking_design)
(provides packager1usa packaging)
(provides inventoryaustria taking_resist)
(provides dicer2usa dicing)
(provides smarttester1usa smart_testing)
(provides quality1usa checking_quality)
(provides lithographer1usa photolithography)
(provides dicer1usa dicing)
(provides inventoryusa taking_impurity)
(provides inventoryusa taking_resist)
(provides inventoryusa taking_chemicals)
(taken design false)
(masked design false)
(status implanter2usa available)
(masked chip false)
(lithographed chip false)
(implanted chip false)
(tested chip false)
(diced chip false)
(packed chip false)
(status creator1usa available)
(status inventorycanada available)
(status implanter1usa available)
(status designeruk available)
(status tester1usa available)
(taken chemicals false)
(implanted chemicals false)
(status inventorybelgio available)
(status lithographer2usa available)
(status inventorychina available)
(status inventoryrussia available)
(status inventorychile available)
(status designerchina available)
(status inventorybrazil available)
(status packager_cooling1usa available)
(taken impurity false)
(implanted impurity false)
(status packager2usa available)
(status tester2usa available)
(status designerusa available)
(status packager1usa available)
(taken resist false)
(implanted resist false)
(status inventoryaustria available)
(status dicer2usa available)
(status smarttester1usa available)
(status quality1usa available)
(status lithographer1usa available)
(status dicer1usa available)
(status inventoryusa available)
(taken silicon false)
(masked silicon false)
(lithographed silicon false)
(= (total-cost) 0)
)
(:goal 
(and 
(packed chip true)
)
)
(:metric minimize (total-cost))

)